<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="25" zv="Cache for Windows (x86-64) 2016.2.1 (Build 803U)" ts="2017-03-02 15:19:44">
<Class name="demo.CoffeeMakerBPL.Context">
<Description>
This class is generated by the demo.CoffeeMakerBPL BPL class.
This class should not be edited or modified in any way.
Do not make direct use of this class in your application.</Description>
<ClassType>persistent</ClassType>
<CompileAfter>demo.CoffeeMakerBPL</CompileAfter>
<IncludeCode/>
<ProcedureBlock>1</ProcedureBlock>
<Super>Ens.BP.Context</Super>
<TimeChanged>64343,77063.706219</TimeChanged>
<TimeCreated>64330,44843.942674</TimeCreated>
<GeneratedBy>Ens.BPL.Compiler.CLS</GeneratedBy>

<Property name="coffeemaker">
<Type>demo.coffeemaker</Type>
</Property>

<Property name="genRequest">
<Type>demo.GenericCoffeeMakerRequest</Type>
</Property>

<Method name="%OnNew">
<FormalSpec>initvalue</FormalSpec>
<Language>cache</Language>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	If '$IsObject(..coffeemakerNewObject()) Quit %objlasterror
	Quit ##super(initvalue)
]]></Implementation>
</Method>

<Storage name="Default">
<Type>%Library.CacheStorage</Type>
<DefaultData>ContextDefaultData1</DefaultData>
<Data name="ContextDefaultData1">
<Structure>listnode</Structure>
<Subscript>"Context"</Subscript>
<Value name="1">
<Value>coffeemaker</Value>
</Value>
<Value name="2">
<Value>genRequest</Value>
</Value>
</Data>
</Storage>
</Class>


<Class name="demo.CoffeeMakerBPL.Thread1">
<Description>
This class is generated by the demo.CoffeeMakerBPL BPL class.
This class should not be edited or modified in any way.
Do not make direct use of this class in your application.</Description>
<ClassType>persistent</ClassType>
<CompileAfter>demo.CoffeeMakerBPL</CompileAfter>
<IncludeCode/>
<ProcedureBlock>1</ProcedureBlock>
<Super>Ens.BP.Thread</Super>
<TimeChanged>64343,77064.494662</TimeChanged>
<TimeCreated>64343,77063.68678</TimeCreated>
<GeneratedBy>Ens.BPL.Compiler.CLS</GeneratedBy>

<Method name="S1">
<FormalSpec>process:Ens.BusinessProcess,context:Ens.BP.Context,synctimedout:%Boolean,syncresponses:%ArrayOfObjects(ELEMENTTYPE="%Library.Persistent"),request:%Library.Persistent,response:%Library.Persistent</FormalSpec>
<Language>cache</Language>
<PublicList>process,context</PublicList>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
 Set $ZT="Trap",status=$$$OK do {
 Set status=$$$OK,context.genRequest=request
 If $$$ISERR(status) Quit
 Set context.%Process = process
 Set status=##class(Ens.Rule.RuleDefinition).EvaluateRulesEx("demo.coffeemakerRule",,context,"RESTRules",.ruleReturn,.ruleReason,,process.RuleLogging)  Quit:$$$ISERR(status)
 Set response.JSONResponse = ruleReturn
 Do process.ClearAllPendingResponses()
 Set ..%NextState="Stop"
 } while (0)
Exit Quit ..ManageState(status)
Trap Set $ZT="",status=..ManageStatus(status,"S1") Goto Exit
]]></Implementation>
</Method>

<Storage name="Default">
<Type>%Library.CacheStorage</Type>
</Storage>
</Class>


<Class name="demo.CoffeeMakerBPL">
<Description>
</Description>
<Super>Ens.BusinessProcessBPL</Super>
<TimeChanged>64343,77060.777951</TimeChanged>
<TimeCreated>64330,44226.095835</TimeCreated>

<XData name="BPL">
<Description>
BPL Definition</Description>
<XMLNamespace>http://www.intersystems.com/bpl</XMLNamespace>
<Data><![CDATA[
<process language='objectscript' request='demo.GenericCoffeeMakerRequest' response='demo.GenericCoffeeMakerResponse' height='2000' width='2000' >
<context>
<property name='coffeemaker' type='demo.coffeemaker' instantiate='1' />
<property name='genRequest' type='demo.GenericCoffeeMakerRequest' instantiate='0' />
</context>
<sequence xend='200' yend='550' >
<assign name="Set context" property="context.genRequest" value="request" action="set" xpos='200' ypos='250' />
<rule name='RESTRules' rule='demo.coffeemakerRule'  resultLocation='response.JSONResponse' ruleContext='context' xpos='200' ypos='350' >
</rule>
<assign name="Get maker and set response" property="response.JSONResponse" value="##class(demo.coffeemaker).%OpenId(request.Argument1).ToJSON()" action="set" xpos='200' ypos='450' disabled="true"/>
</sequence>
</process>
]]></Data>
</XData>

<Storage name="Default">
<Type>%Library.CacheStorage</Type>
</Storage>
</Class>




<Class name="demo.CoffeeMakerProduction">
<Super>Ens.Production</Super>
<TimeChanged>64344,52084.035951</TimeChanged>
<TimeCreated>64320,55880.492828</TimeCreated>

<XData name="ProductionDefinition">
<Data><![CDATA[
<Production Name="demo.CoffeeMakerProduction" TestingEnabled="true" LogGeneralTraceEvents="false">
  <Description></Description>
  <ActorPoolSize>2</ActorPoolSize>
  <Item Name="demo.RESTCoffeeMakerService" Category="" ClassName="demo.RESTCoffeeMakerService" PoolSize="0" Enabled="true" Foreground="false" Comment="" LogTraceEvents="false" Schedule="">
    <Setting Target="Host" Name="ArchiveIO">1</Setting>
  </Item>
  <Item Name="demo.CoffeeMakerBPL" Category="" ClassName="demo.CoffeeMakerBPL" PoolSize="1" Enabled="true" Foreground="false" Comment="" LogTraceEvents="false" Schedule="">
  </Item>
  <Item Name="demo.MyCoffeeMakerService" Category="" ClassName="demo.MyCoffeeMakerService" PoolSize="0" Enabled="true" Foreground="false" Comment="" LogTraceEvents="false" Schedule="">
  </Item>
</Production>
]]></Data>
</XData>
</Class>


<Class name="demo.GenericCoffeeMakerRequest">
<Super>Ens.Request</Super>
<TimeChanged>64344,47576.65262</TimeChanged>
<TimeCreated>64331,40617.788074</TimeCreated>

<Property name="Method">
<Type>%String</Type>
</Property>

<Property name="URL">
<Type>%String</Type>
</Property>

<Property name="Argument1">
<Type>%String</Type>
</Property>

<Property name="Payload">
<Type>demo.tempCoffeemaker</Type>
</Property>

<Storage name="Default">
<Type>%Library.CacheStorage</Type>
<DefaultData>GenericCoffeeMakerRequestDefaultData</DefaultData>
<Data name="GenericCoffeeMakerRequestDefaultData">
<Subscript>"GenericCoffeeMakerRequest"</Subscript>
<Value name="1">
<Value>Method</Value>
</Value>
<Value name="2">
<Value>URL</Value>
</Value>
<Value name="3">
<Value>String</Value>
</Value>
<Value name="4">
<Value>Argument1</Value>
</Value>
<Value name="5">
<Value>Payload</Value>
</Value>
</Data>
</Storage>

<Method name="%OnDelete">
<Description><![CDATA[
This callback method is invoked by the <METHOD>%Delete</METHOD> method to 
provide notification that the object specified by <VAR>oid</VAR> is being deleted.

<P>If this method returns an error then the object will not be deleted.]]></Description>
<ClassMethod>1</ClassMethod>
<FormalSpec>oid:%ObjectIdentity</FormalSpec>
<Private>1</Private>
<ReturnType>%Status</ReturnType>
<ServerOnly>1</ServerOnly>
<Implementation><![CDATA[
	Set tSC = $$$OK, tThis = ##class(demo.GenericCoffeeMakerRequest).%Open(oid)
     If $ISOBJECT(tThis.Payload) {
	    Set tSC = ##class(demo.tempCoffeemaker).%DeleteId(tThis.Payload.%Id())
    	Quit tSC
     }
	Quit $$$OK
]]></Implementation>
</Method>
</Class>


<Class name="demo.GenericCoffeeMakerResponse">
<Super>Ens.Response</Super>
<TimeChanged>64341,34833.875217</TimeChanged>
<TimeCreated>64332,40783.000407</TimeCreated>

<Property name="JSONResponse">
<Type>%String</Type>
<Parameter name="MAXLEN" value="5000"/>
</Property>

<Storage name="Default">
<Type>%Library.CacheStorage</Type>
<DefaultData>GenericCoffeeMakerResponseDefaultData</DefaultData>
<Data name="GenericCoffeeMakerResponseDefaultData">
<Subscript>"GenericCoffeeMakerResponse"</Subscript>
<Value name="1">
<Value>JSONResponse</Value>
</Value>
</Data>
</Storage>
</Class>


<Class name="demo.MyFunctions">
<Super>Ens.Rule.FunctionSet</Super>
<TimeChanged>64344,50122.731807</TimeChanged>
<TimeCreated>64338,40618.662211</TimeCreated>

<Method name="ToJSON">
<ClassMethod>1</ClassMethod>
<FormalSpec>id:%String</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
		set JSONstring = ##class(demo.coffeemaker).%OpenId(id).ToJSON()
		quit JSONstring
]]></Implementation>
</Method>

<Method name="GetAllCoffeemakers">
<ClassMethod>1</ClassMethod>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	Set tArr = []
	Set rs = ##class(%SQL.Statement).%ExecDirect(,"SELECT * FROM demo.coffeemaker")
	While rs.%Next() {
		Do tArr.%Push({
			"img":    			(rs.%Get("Img")),
			"coffeemakerID":    (rs.%Get("CoffeemakerID")),
			"name": 			(rs.%Get("Name")),
			"brand":        	(rs.%Get("Brand")),
			"color":   			(rs.%Get("Color")),
			"numcups":          (rs.%Get("NumCups")),
			"price":        	(rs.%Get("Price"))
		})
	}
	
	quit tArr.%ToJSON()
]]></Implementation>
</Method>

<Method name="DeleteMaker">
<ClassMethod>1</ClassMethod>
<FormalSpec>id:%String</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	set status = ##class(demo.coffeemaker).%DeleteId(id)
	set response = {}
	if status = $$$OK
	{
		do response.%Set("message","Coffeemaker with id "_id_" has been deleted.")
	}
	else 
	{
		do response.%Set("message","Deletion failed. Likely no coffeemaker with id "_id)
	}
	quit response.%ToJSON()
]]></Implementation>
</Method>

<Method name="NewMaker">
<ClassMethod>1</ClassMethod>
<FormalSpec>Payload:demo.tempCoffeemaker</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	Set cm = ##class(demo.coffeemaker).%New()
	Do ..CopyToCoffeemakerFromJSON(.cm,Payload)
	
	Set sc = cm.%Save()
	
	Set result={}
	do result.%Set("Status",$s($$$ISERR(sc):$system.Status.GetOneErrorText(sc),1:"OK"))
	if '$$$ISERR(sc) do result.%Set("Message","New maker saved with ID "_cm.%Id())
	quit result.%ToJSON()
]]></Implementation>
</Method>

<Method name="EditMaker">
<ClassMethod>1</ClassMethod>
<FormalSpec>id:%String,Payload:demo.tempCoffeemaker</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	Set cm = ##class(demo.coffeemaker).%OpenId(id)
	If '$IsObject(cm) {
		Set error = {"errormessage": "Coffee maker does not exist"}
		Quit error.%ToJSON()
	}
	
	Do ..CopyToCoffeemakerFromJSON(.cm,Payload)
				
	Set sc = cm.%Save()

	Set result={}
	do result.%Set("Status",$s($$$ISERR(sc):$system.Status.GetOneErrorText(sc),1:"OK"))
	if '$$$ISERR(sc) do result.%Set("Message","Maker with ID "_cm.%Id()_" has been updated")
	quit result.%ToJSON()
]]></Implementation>
</Method>

<Method name="FindCoffeeMakerByBrand">
<ClassMethod>1</ClassMethod>
<FormalSpec>brand:%String</FormalSpec>
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	Set tArr = []
	Set rs = ##class(%SQL.Statement).%ExecDirect(,"SELECT * FROM demo.coffeemaker where brand='"_brand_"'")
	While rs.%Next() {
		Do tArr.%Push({
			"img":    			(rs.%Get("Img")),
			"coffeemakerID":    (rs.%Get("CoffeemakerID")),
			"name": 			(rs.%Get("Name")),
			"brand":        	(rs.%Get("Brand")),
			"color":   			(rs.%Get("Color")),
			"numcups":          (rs.%Get("NumCups")),
			"price":        	(rs.%Get("Price"))
		})
	}
	set ^test = brand
	quit tArr.%ToJSON()
]]></Implementation>
</Method>

<Method name="CopyToCoffeemakerFromJSON">
<ClassMethod>1</ClassMethod>
<FormalSpec><![CDATA[&cm:demo.coffeemaker,obj:demo.tempCoffeemaker]]></FormalSpec>
<Implementation><![CDATA[
	Set cm.Name= obj.Name
	set cm.Brand = obj.Brand
	Set cm.Img = obj.Img
	set cm.Color = obj.Color
	set cm.NumCups = obj.NumCups
	set cm.Price = obj.Price
]]></Implementation>
</Method>
</Class>


<Class name="demo.RESTCoffeeMakerService">
<Super>Ens.BusinessService</Super>
<TimeChanged>64343,58638.947842</TimeChanged>
<TimeCreated>64320,54142.718412</TimeCreated>

<Method name="OnProcessInput">
<FormalSpec>pInput:demo.GenericCoffeeMakerRequest,*pOutput:demo.GenericCoffeeMakerResponse</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	set tSC = $$$OK
	try {
				
		set tSC = ..SendRequestSync("demo.CoffeeMakerBPL", pInput, .pOutput)
		
		$$$ThrowOnError(tSC)
	    
	 }
	catch ex {
		set tSC = ex.AsStatus()
	}
	return tSC
]]></Implementation>
</Method>
</Class>


<Class name="demo.coffeemaker">
<Super>%Persistent,%Populate,%XML.Adaptor</Super>
<TimeChanged>64341,34783.600551</TimeChanged>
<TimeCreated>64320,60422.477244</TimeCreated>

<Property name="CoffeemakerID">
<Type>%Integer</Type>
<Calculated>1</Calculated>
<SqlComputeCode>Set {*} = {ID} </SqlComputeCode>
<SqlComputed>1</SqlComputed>
</Property>

<Property name="Name">
<Type>%String</Type>
</Property>

<Property name="Brand">
<Type>%String</Type>
</Property>

<Property name="Color">
<Type>%String</Type>
</Property>

<Property name="NumCups">
<Type>%Integer</Type>
<Parameter name="VALUELIST" value=",1,2,3,4,8,12,16,32,64"/>
</Property>

<Property name="Price">
<Type>%Numeric</Type>
<Parameter name="SCALE" value="2"/>
</Property>

<Property name="Img">
<Type>%String</Type>
<InitialExpression>"test-redphone.png"</InitialExpression>
<Parameter name="MAXLEN" value="256"/>
</Property>

<Method name="ToJSON">
<ReturnType>%String</ReturnType>
<Implementation><![CDATA[
	set obj = {}
	set obj.CoffeemakerID = ..CoffeemakerID
	set obj.Name = ..Name
	set obj.Brand = ..Brand
	set obj.Color = ..Color
	set obj.NumCups = ..NumCups
	set obj.Price = ..Price
	set obj.Img = ..Img
	set string = obj.%ToJSON()
	quit string
]]></Implementation>
</Method>

<Storage name="Default">
<Type>%Library.CacheStorage</Type>
<DataLocation>^demo.coffeemakerD</DataLocation>
<DefaultData>coffeemakerDefaultData</DefaultData>
<IdLocation>^demo.coffeemakerD</IdLocation>
<IndexLocation>^demo.coffeemakerI</IndexLocation>
<StreamLocation>^demo.coffeemakerS</StreamLocation>
<ExtentSize>10</ExtentSize>
<Data name="coffeemakerDefaultData">
<Value name="1">
<Value>%%CLASSNAME</Value>
</Value>
<Value name="2">
<Value>CoffeemakerID</Value>
</Value>
<Value name="3">
<Value>Name</Value>
</Value>
<Value name="4">
<Value>Brand</Value>
</Value>
<Value name="5">
<Value>Color</Value>
</Value>
<Value name="6">
<Value>NumCups</Value>
</Value>
<Value name="7">
<Value>Price</Value>
</Value>
<Value name="8">
<Value>Img</Value>
</Value>
</Data>
<Property name="%%CLASSNAME">
<Selectivity>100.0000%</Selectivity>
<AverageFieldSize>1</AverageFieldSize>
</Property>
<Property name="%%ID">
<Selectivity>1</Selectivity>
<AverageFieldSize>1.1</AverageFieldSize>
</Property>
<Property name="Brand">
<Selectivity>10.0000%</Selectivity>
<AverageFieldSize>4.8</AverageFieldSize>
</Property>
<Property name="CoffeeMakerID">
<Selectivity>10.0000%</Selectivity>
<AverageFieldSize>1.1</AverageFieldSize>
</Property>
<Property name="Color">
<Selectivity>20.0000%</Selectivity>
<AverageFieldSize>4.7</AverageFieldSize>
</Property>
<Property name="ID">
<Selectivity>10.0000%</Selectivity>
<AverageFieldSize>8.8</AverageFieldSize>
</Property>
<Property name="Img">
<Selectivity>10.0000%</Selectivity>
<AverageFieldSize>5</AverageFieldSize>
</Property>
<Property name="Name">
<Selectivity>10.0000%</Selectivity>
<AverageFieldSize>15.7</AverageFieldSize>
</Property>
<Property name="NumCups">
<Selectivity>33.3333%</Selectivity>
<AverageFieldSize>1.3</AverageFieldSize>
</Property>
<Property name="Price">
<Selectivity>10.0000%</Selectivity>
<AverageFieldSize>6.8</AverageFieldSize>
</Property>
<SQLMap name="IDKEY">
<BlockCount>-4</BlockCount>
</SQLMap>
</Storage>
</Class>


<Class name="demo.coffeemakerRequest">
<Super>Ens.Request</Super>
<TimeChanged>64320,54094.854372</TimeChanged>
<TimeCreated>64320,53918.58877</TimeCreated>

<Property name="ID">
<Type>%Numeric</Type>
</Property>

<Storage name="Default">
<Type>%Library.CacheStorage</Type>
<DefaultData>coffeemakerRequestDefaultData</DefaultData>
<Data name="coffeemakerRequestDefaultData">
<Subscript>"coffeemakerRequest"</Subscript>
<Value name="1">
<Value>ID</Value>
</Value>
</Data>
</Storage>
</Class>


<Class name="demo.coffeemakerResponse">
<Super>Ens.Response</Super>
<TimeChanged>64321,64964.299799</TimeChanged>
<TimeCreated>64320,54079.002428</TimeCreated>

<Property name="Name">
<Type>%String</Type>
</Property>

<Property name="Brand">
<Type>%String</Type>
</Property>

<Property name="Color">
<Type>%String</Type>
</Property>

<Property name="NumCups">
<Type>%Integer</Type>
<Parameter name="VALUELIST" value=",1,3,5,12,16,32,64"/>
</Property>

<Property name="Price">
<Type>%Numeric</Type>
<Parameter name="SCALE" value="2"/>
</Property>

<Property name="Img">
<Type>%String</Type>
<Parameter name="MAXLEN" value="256"/>
</Property>

<Storage name="Default">
<Type>%Library.CacheStorage</Type>
<DefaultData>coffeemakerResponseDefaultData</DefaultData>
<Data name="coffeemakerResponseDefaultData">
<Structure>listnode</Structure>
<Subscript>"coffeemakerResponse"</Subscript>
<Value name="1">
<Value>Name</Value>
</Value>
<Value name="2">
<Value>Brand</Value>
</Value>
<Value name="3">
<Value>Color</Value>
</Value>
<Value name="4">
<Value>NumCups</Value>
</Value>
<Value name="5">
<Value>Price</Value>
</Value>
<Value name="6">
<Value>Img</Value>
</Value>
</Data>
</Storage>
</Class>


<Class name="demo.coffeemakerRule">
<Description>
</Description>
<Super>Ens.Rule.Definition</Super>
<TimeChanged>64344,50309.422767</TimeChanged>
<TimeCreated>64337,61381.561342</TimeCreated>

<Parameter name="RuleAssistClass">
<Default>Ens.Rule.GeneralBusinessRuleAssist</Default>
</Parameter>

<XData name="RuleDefinition">
<XMLNamespace>http://www.intersystems.com/rule</XMLNamespace>
<Data><![CDATA[
<ruleDefinition alias="" context="demo.CoffeeMakerBPL.Context" production="">
<variable name=""></variable>
<ruleSet name="" effectiveBegin="" effectiveEnd="">
<rule name="GetOne" disabled="false">
<when condition="(genRequest.Method=&quot;GET&quot;)&amp;&amp;(genRequest.URL=&quot;/coffeemaker/:id/int&quot;)">
<return>ToJSON(genRequest.Argument1)</return>
</when>
</rule>
<rule name="GetAll" disabled="false">
<when condition="(genRequest.Method=&quot;GET&quot;)&amp;&amp;(genRequest.URL=&quot;/coffeemakers/int&quot;)">
<return>GetAllCoffeemakers()</return>
</when>
</rule>
<rule name="DeleteOne" disabled="false">
<when condition="(genRequest.Method=&quot;DELETE&quot;)&amp;&amp;(genRequest.URL=&quot;/coffeemaker/:id/int&quot;)">
<return>DeleteMaker(genRequest.Argument1)</return>
</when>
</rule>
<rule name="NewMaker" disabled="false">
<when condition="(genRequest.Method=&quot;POST&quot;)&amp;&amp;(genRequest.URL=&quot;/newcoffeemaker/int&quot;)">
<return>NewMaker(genRequest.Payload)</return>
</when>
</rule>
<rule name="EditMaker" disabled="false">
<when condition="(genRequest.Method=&quot;PUT&quot;)&amp;&amp;(genRequest.URL=&quot;/coffeemaker/:id/int&quot;)">
<return>EditMaker(genRequest.Argument1,genRequest.Payload)</return>
</when>
</rule>
<rule name="" disabled="false">
<when condition="(genRequest.Method=&quot;GET&quot;)&amp;&amp;(genRequest.URL=&quot;/coffeemakers/brand/:brand/int&quot;)">
<return>FindCoffeeMakerByBrand(genRequest.Argument1)</return>
</when>
</rule>
<rule name="No Rule" disabled="false">
<when condition="1">
<return>"No rule for: "_genRequest.Method_":"_genRequest.URL</return>
</when>
</rule>
</ruleSet>
</ruleDefinition>
]]></Data>
</XData>
</Class>


<Class name="demo.tempCoffeemaker">
<Super>%Persistent,demo.coffeemaker</Super>
<TimeChanged>64344,46196.002418</TimeChanged>
<TimeCreated>64344,45668.251495</TimeCreated>

<Storage name="Default">
<Type>%Library.CacheStorage</Type>
<DataLocation>^demo.tempCoffeemakerD</DataLocation>
<DefaultData>tempCoffeemakerDefaultData</DefaultData>
<IdLocation>^demo.tempCoffeemakerD</IdLocation>
<IndexLocation>^demo.tempCoffeemakerI</IndexLocation>
<StreamLocation>^demo.tempCoffeemakerS</StreamLocation>
<Data name="tempCoffeemakerDefaultData">
<Structure>listnode</Structure>
<Subscript/>
<Value name="1">
<Value>%%CLASSNAME</Value>
</Value>
<Value name="2">
<Value>Name</Value>
</Value>
<Value name="3">
<Value>Brand</Value>
</Value>
<Value name="4">
<Value>Color</Value>
</Value>
<Value name="5">
<Value>NumCups</Value>
</Value>
<Value name="6">
<Value>Price</Value>
</Value>
<Value name="7">
<Value>Img</Value>
</Value>
</Data>
</Storage>
</Class>
</Export>
