<?xml version="1.0" encoding="UTF-8"?>
<Export generator="Cache" version="25">
<Class name="Docker.ISC1076">
<Description>
%Installer Manifest Docker.ISC1076</Description>
<IncludeCode>%occInclude</IncludeCode>
<TimeCreated>64406,54997.841997</TimeCreated>

<XData name="ISC1076Manifest">
<Description>
Manifest Definition.</Description>
<XMLNamespace>INSTALLER</XMLNamespace>
<Data><![CDATA[
<Manifest>
<Namespace Name="%SYS" Create="no" >
<Invoke Class="Security.Users" Method="Import" CheckStatus="true">
<Arg Value="/usr/cachesys/mgr/UsersExport.xml"/>
</Invoke>
</Namespace>
<Namespace Name="ENSEMBLE" Create="no">
<Log Text="Importing BeforeDemoAndEx2.xml" Level="0"/>
<Import File="/usr/cachesys/mgr/BeforeDemoAndEx2.xml" Flags="cuk">
</Import>
<Log Text="Importing coffeemakers.gof" Level="0"/>
<Import File="/usr/cachesys/mgr/coffeemakers.gof" Flags="cuk">
</Import>
<Log Text="Creating initial coffee application" Level="0"/>
<CSPApplication Url="/coffee"
		   Directory="/usr/cachesys/csp/coffee/"
	           Resource=""
	           Grant="%DB_%DEFAULT"
	           Description="Coffee App"
	           Recurse="1"
	           CookiePath="/coffee/"
	           AuthenticationMethods="64"
	           ServeFiles="1"
	 />
</Namespace>
</Manifest>
]]></Data>
</XData>

<Method name="setup">
<Description>
This is a method generator whose code is generated by XGL.</Description>
<Internal>1</Internal>
<ClassMethod>1</ClassMethod>
<CodeMode>objectgenerator</CodeMode>
<FormalSpec><![CDATA[&pVars,pLogLevel:%Integer=3,pInstaller:%Installer.Installer,pLogger:%Installer.AbstractLogger]]></FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
 #; Let our XGL document generate code for this method.
 Quit ##class(%Installer.Manifest).%Generate(%compiledclass, %code, "ISC1076Manifest")
]]></Implementation>
</Method>

<Method name="CachelibReadWrite">
<ClassMethod>1</ClassMethod>
<FormalSpec>pVars,pLogLevel,pInstaller</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	w "Turn on Read/Write flag on Cachelib.", !
	set tSC = $$$OK
    try {
        new $Namespace
        set $Namespace = "%SYS"
        w $zu(1,"cachelib",0,0,0,0,0,0,0,0,0,0,0,2)
    } catch e {

    }
    
    do $system.Status.DisplayError(tSC)
    quit tSC
]]></Implementation>
</Method>

<Method name="CachelibReadOnly">
<ClassMethod>1</ClassMethod>
<FormalSpec>pVars,pLogLevel,tInstaller</FormalSpec>
<ReturnType>%Status</ReturnType>
<Implementation><![CDATA[
	w "Turn on ReadOnly flag on Cachelib.", !
	set tSC = $$$OK
    try {
        new $Namespace
        set $Namespace = "%SYS"
        w $zu(1,"cachelib",0,0,0,0,0,0,0,0,0,0,0,1)
    } catch e {

    }
    
    do $system.Status.DisplayError(tSC)
    quit tSC
]]></Implementation>
</Method>
</Class>
</Export>
